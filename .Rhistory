exp(-6+0.05*40+3.5)/(1+exp(-6+0.05*40+3.5))
(log(0.5/0.5)-6-3.5)/0.05
(log(0.378/(1-0.378))-6-3.5)/0.05
(log(0.5/0.5)+6-3.5)/0.05
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(rstudioapi)
library(mice)
library(dplyr)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
train_data <- read.csv("./training.csv")
X_test <- read.csv("./X_test.csv")
#head(train_data)
summary(train_data)
# code from https://www.r-bloggers.com/imputing-missing-data-with-r-mice-package/
pMiss <- function(x){sum(is.na(x))/length(x)*100}
apply(train_data,2, pMiss)
# i have done this manually because i didn't find a nice solution in R to select columns conditional on mean , min and max (would all be 1)
dummy_cols <- c("balcony", "basement", "bath_tube", "building_plot", "cabletv", "ceiling", "cheminee", "elevator", "first_time", "furnished", "kids_friendly", "laundry", "minergie", "new_building", "oldbuilding", "oven", "parking_indoor", "parking_outside", "playground", "pool", "quiet", "raised_groundfloor", "sale", "sunny", "terrace", "topstorage", "veranda", "wheelchair")
train_without_dummyNA <- train_data %>% mutate_at(.vars = dummy_cols, .funs = funs(ifelse(is.na(.), 0, .)))
apply(train_without_dummyNA,2, pMiss)
train_imputed <- train_without_dummy[1:100]
train_imputed <- train_without_dummyNA[1:100]
train_imputed <- train_without_dummyNA[1:100,]
train_imputed <- mice(train_imputed, m = 2, method = "mean", maxit = 50, seed = 500)
